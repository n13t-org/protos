// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package n13t_gitlab_v4

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// See https://docs.gitlab.com/ee/api/events.html
type Event struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	TargetType           string   `protobuf:"bytes,2,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ProjectId            uint32   `protobuf:"varint,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TargetId             uint32   `protobuf:"varint,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	AuthorId             uint32   `protobuf:"varint,6,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	TargetTitle          string   `protobuf:"bytes,7,opt,name=target_title,json=targetTitle,proto3" json:"target_title,omitempty"`
	Author               *Author  `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	AuthorUsername       string   `protobuf:"bytes,9,opt,name=author_username,json=authorUsername,proto3" json:"author_username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *Event) GetTargetType() string {
	if m != nil {
		return m.TargetType
	}
	return ""
}

func (m *Event) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event) GetProjectId() uint32 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *Event) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *Event) GetAuthorId() uint32 {
	if m != nil {
		return m.AuthorId
	}
	return 0
}

func (m *Event) GetTargetTitle() string {
	if m != nil {
		return m.TargetTitle
	}
	return ""
}

func (m *Event) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Event) GetAuthorUsername() string {
	if m != nil {
		return m.AuthorUsername
	}
	return ""
}

type Author struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Id                   uint32   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	AvatarUrl            string   `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	WebUrl               string   `protobuf:"bytes,6,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Author) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Author) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Author) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Author) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *Author) GetWebUrl() string {
	if m != nil {
		return m.WebUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*Event)(nil), "n13t.gitlab.v4.Event")
	proto.RegisterType((*Author)(nil), "n13t.gitlab.v4.Author")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0x9b, 0xc6, 0x8d, 0x27, 0x34, 0x48, 0x2b, 0x04, 0x56, 0x11, 0x52, 0x5a, 0x21, 0x35,
	0x5c, 0x8c, 0x48, 0x39, 0x22, 0x04, 0x46, 0x1c, 0x7a, 0xe1, 0x60, 0x35, 0x07, 0x84, 0xa8, 0xd9,
	0x64, 0x87, 0x74, 0x2b, 0xdb, 0xbb, 0xec, 0x8e, 0x53, 0x22, 0xed, 0x85, 0x1b, 0xdf, 0xc2, 0x37,
	0xf1, 0x25, 0x39, 0x21, 0xef, 0xba, 0x45, 0x70, 0xf2, 0xee, 0x7b, 0x6f, 0xe6, 0xed, 0xbc, 0x31,
	0x8c, 0x71, 0x83, 0x0d, 0x65, 0xda, 0x28, 0x52, 0x6c, 0xd2, 0xbc, 0x38, 0xa3, 0x6c, 0x2d, 0xa9,
	0xe2, 0xcb, 0x6c, 0xf3, 0xf2, 0xe8, 0xd1, 0x86, 0x57, 0x52, 0x70, 0xc2, 0xe7, 0xb7, 0x87, 0x20,
	0x3c, 0xf9, 0x3d, 0x80, 0xe1, 0xfb, 0xae, 0x90, 0xfd, 0x88, 0x60, 0xcc, 0x57, 0x24, 0x55, 0x53,
	0x36, 0xbc, 0xc6, 0x34, 0x9a, 0x46, 0xb3, 0x24, 0xff, 0xb2, 0xcb, 0x3f, 0x9b, 0x4f, 0xf3, 0x8f,
	0x97, 0xb3, 0x95, 0x41, 0x4e, 0x28, 0x5c, 0xab, 0x85, 0xff, 0xae, 0x2a, 0x65, 0x51, 0x38, 0x83,
	0x4a, 0x63, 0x83, 0xc2, 0xe9, 0xd6, 0x5e, 0x75, 0xb0, 0xaa, 0x6b, 0x6c, 0x3a, 0x41, 0x8d, 0x66,
	0x8d, 0xc2, 0x5d, 0x2b, 0xd9, 0xd1, 0x15, 0x7e, 0x25, 0x27, 0xd0, 0x92, 0x51, 0x5b, 0x14, 0x0e,
	0xbf, 0x6b, 0x69, 0x50, 0x3c, 0x7b, 0x5a, 0x40, 0x30, 0xfd, 0xc0, 0x6b, 0x64, 0x02, 0xc6, 0xc4,
	0xcd, 0x1a, 0xa9, 0xa4, 0xad, 0xc6, 0x74, 0xcf, 0x3f, 0xe1, 0xdd, 0x2e, 0x7f, 0x63, 0x5e, 0xcf,
	0x5f, 0x5d, 0xce, 0xa4, 0xb5, 0x2d, 0xba, 0x5a, 0x56, 0x68, 0x49, 0x35, 0x18, 0x1c, 0x4a, 0x83,
	0xdf, 0x5a, 0xb4, 0xe4, 0x1a, 0x45, 0xe8, 0xb4, 0x51, 0xd7, 0xb8, 0x22, 0x67, 0x1b, 0xa9, 0x35,
	0x92, 0x6b, 0x2d, 0x1a, 0xd7, 0xb9, 0x84, 0xbe, 0x17, 0x5b, 0x8d, 0xec, 0x01, 0x0c, 0x49, 0x52,
	0x85, 0xe9, 0xa0, 0xeb, 0x5f, 0x84, 0x0b, 0x7b, 0x02, 0xd0, 0x17, 0x97, 0x52, 0xa4, 0xfb, 0xd3,
	0x68, 0x76, 0x58, 0x24, 0x3d, 0x72, 0x2e, 0xd8, 0x63, 0x48, 0xfa, 0xa7, 0x49, 0x91, 0x0e, 0x3d,
	0x3b, 0x0a, 0x40, 0x20, 0x79, 0x4b, 0x57, 0xca, 0x74, 0x64, 0x1c, 0xc8, 0x00, 0x9c, 0x0b, 0x76,
	0x0c, 0xf7, 0x6e, 0x87, 0xf2, 0xae, 0x07, 0xde, 0xb5, 0x1f, 0xf4, 0xc2, 0x7b, 0x67, 0x10, 0x07,
	0x79, 0x3a, 0x9a, 0x46, 0xb3, 0xf1, 0xfc, 0x61, 0xf6, 0xef, 0xfe, 0xb2, 0xb7, 0x9e, 0x2d, 0x7a,
	0x15, 0x3b, 0x85, 0xfb, 0xbd, 0x5f, 0x37, 0x9f, 0x5f, 0x57, 0xe2, 0xbb, 0x4e, 0x02, 0xbc, 0xe8,
	0xd1, 0x93, 0x5f, 0x11, 0xc4, 0xa1, 0x96, 0x31, 0xd8, 0xff, 0xbb, 0xd7, 0xc2, 0x9f, 0xd9, 0x11,
	0x8c, 0xee, 0x1a, 0xf8, 0xb0, 0x8b, 0xbb, 0x3b, 0x9b, 0xc0, 0x9e, 0x14, 0x3e, 0xa2, 0xc3, 0x62,
	0x4f, 0x8a, 0x2e, 0x35, 0x4b, 0x9c, 0xd0, 0x47, 0x93, 0x14, 0xe1, 0xc2, 0x4e, 0x01, 0xf8, 0x86,
	0x13, 0x37, 0x65, 0x6b, 0x2a, 0x9f, 0x4b, 0x92, 0x8f, 0x76, 0xf9, 0xd0, 0x0c, 0x7e, 0x46, 0x51,
	0x91, 0x04, 0x6e, 0x61, 0x2a, 0x76, 0x0c, 0x07, 0x37, 0xb8, 0xf4, 0xaa, 0xf8, 0x3f, 0x55, 0x7c,
	0x83, 0xcb, 0x85, 0xa9, 0x96, 0xb1, 0xff, 0x25, 0xcf, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x93,
	0xc0, 0xc5, 0x05, 0xca, 0x02, 0x00, 0x00,
}
