// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package n13t_idm_v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Enabled    bool                `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Attributes map[string]*any.Any `protobuf:"bytes,100,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// OpenId Standard Claims Members (https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims)
	Sub                  string               `protobuf:"bytes,10,opt,name=sub,proto3" json:"sub,omitempty"`
	Name                 string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	GivenName            string               `protobuf:"bytes,12,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName           string               `protobuf:"bytes,14,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	MiddleName           string               `protobuf:"bytes,15,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Nickname             string               `protobuf:"bytes,16,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PreferredUsername    string               `protobuf:"bytes,17,opt,name=preferred_username,json=preferredUsername,proto3" json:"preferred_username,omitempty"`
	Profile              string               `protobuf:"bytes,20,opt,name=profile,proto3" json:"profile,omitempty"`
	Picture              string               `protobuf:"bytes,21,opt,name=picture,proto3" json:"picture,omitempty"`
	Website              string               `protobuf:"bytes,22,opt,name=website,proto3" json:"website,omitempty"`
	Email                string               `protobuf:"bytes,30,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified        bool                 `protobuf:"varint,31,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Gender               string               `protobuf:"bytes,32,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthdate            string               `protobuf:"bytes,33,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Zoneinfo             string               `protobuf:"bytes,34,opt,name=zoneinfo,proto3" json:"zoneinfo,omitempty"`
	Locale               string               `protobuf:"bytes,35,opt,name=locale,proto3" json:"locale,omitempty"`
	PhoneNumber          string               `protobuf:"bytes,40,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneNumberVerified  bool                 `protobuf:"varint,41,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	Address              *User_Address        `protobuf:"bytes,42,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *User) GetAttributes() map[string]*any.Any {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *User) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *User) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *User) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetPreferredUsername() string {
	if m != nil {
		return m.PreferredUsername
	}
	return ""
}

func (m *User) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *User) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *User) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *User) GetZoneinfo() string {
	if m != nil {
		return m.Zoneinfo
	}
	return ""
}

func (m *User) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *User) GetAddress() *User_Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim
type User_Address struct {
	Formatted            string   `protobuf:"bytes,1,opt,name=formatted,proto3" json:"formatted,omitempty"`
	StreetAddress        string   `protobuf:"bytes,2,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	Locality             string   `protobuf:"bytes,3,opt,name=locality,proto3" json:"locality,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	PostalCode           string   `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User_Address) Reset()         { *m = User_Address{} }
func (m *User_Address) String() string { return proto.CompactTextString(m) }
func (*User_Address) ProtoMessage()    {}
func (*User_Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0, 1}
}

func (m *User_Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User_Address.Unmarshal(m, b)
}
func (m *User_Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User_Address.Marshal(b, m, deterministic)
}
func (m *User_Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User_Address.Merge(m, src)
}
func (m *User_Address) XXX_Size() int {
	return xxx_messageInfo_User_Address.Size(m)
}
func (m *User_Address) XXX_DiscardUnknown() {
	xxx_messageInfo_User_Address.DiscardUnknown(m)
}

var xxx_messageInfo_User_Address proto.InternalMessageInfo

func (m *User_Address) GetFormatted() string {
	if m != nil {
		return m.Formatted
	}
	return ""
}

func (m *User_Address) GetStreetAddress() string {
	if m != nil {
		return m.StreetAddress
	}
	return ""
}

func (m *User_Address) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *User_Address) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *User_Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *User_Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "n13t.idm.v1alpha1.User")
	proto.RegisterMapType((map[string]*any.Any)(nil), "n13t.idm.v1alpha1.User.AttributesEntry")
	proto.RegisterType((*User_Address)(nil), "n13t.idm.v1alpha1.User.Address")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x6e, 0xdb, 0x38,
	0x10, 0x86, 0xf3, 0x6b, 0x8f, 0xf3, 0xcb, 0x4d, 0x02, 0xae, 0xb0, 0xbb, 0x76, 0xb2, 0x28, 0xea,
	0x06, 0xa8, 0x82, 0x24, 0x97, 0xa6, 0x37, 0xa3, 0x28, 0x7a, 0xcb, 0xc1, 0x6d, 0x7a, 0x15, 0x28,
	0x73, 0xe4, 0x10, 0x91, 0x48, 0x81, 0xa2, 0x5c, 0xa8, 0xef, 0xd6, 0x47, 0xe8, 0x3b, 0x15, 0x1c,
	0x4a, 0x4e, 0x90, 0xa0, 0xe8, 0x8d, 0xdf, 0xcf, 0x0c, 0xc8, 0x99, 0x8f, 0x00, 0x75, 0x85, 0x36,
	0x2e, 0xad, 0x71, 0x86, 0x1d, 0xea, 0xcb, 0x6b, 0x17, 0x2b, 0x59, 0xc4, 0xcb, 0x4b, 0x91, 0x97,
	0xf7, 0xe2, 0x32, 0xfa, 0x7b, 0x61, 0xcc, 0x22, 0xc7, 0x0b, 0x32, 0xa4, 0x75, 0x76, 0x21, 0x74,
	0x13, 0xdc, 0xd1, 0xe8, 0xb9, 0xe4, 0x54, 0x81, 0x95, 0x13, 0x45, 0x19, 0x0c, 0x67, 0x3f, 0xfb,
	0xb0, 0x71, 0x57, 0xa1, 0x65, 0x1c, 0xb6, 0x51, 0x8b, 0x34, 0x47, 0xc9, 0x07, 0xe3, 0xde, 0xa4,
	0x3f, 0xeb, 0x20, 0xfb, 0x04, 0x20, 0x9c, 0xb3, 0x2a, 0xad, 0x1d, 0x56, 0x5c, 0x8e, 0xd7, 0x27,
	0xc3, 0xab, 0xd7, 0xf1, 0x8b, 0x6b, 0xc4, 0xbe, 0x4d, 0x3c, 0x5d, 0x39, 0x3f, 0x6a, 0x67, 0x9b,
	0xd9, 0x93, 0x52, 0x76, 0x00, 0xeb, 0x55, 0x9d, 0x72, 0x18, 0xf7, 0x26, 0x83, 0x99, 0x3f, 0x32,
	0x06, 0x1b, 0x5a, 0x14, 0xc8, 0x87, 0x44, 0xd1, 0x99, 0xfd, 0x0b, 0xb0, 0x50, 0x4b, 0xd4, 0x09,
	0x29, 0x3b, 0xa4, 0x0c, 0x88, 0xb9, 0xf5, 0xf2, 0x08, 0x86, 0x99, 0x28, 0x54, 0xde, 0x04, 0x7d,
	0x8f, 0x74, 0x08, 0x54, 0x67, 0x28, 0x94, 0x94, 0x39, 0x06, 0xc3, 0x7e, 0x30, 0x04, 0x8a, 0x0c,
	0x11, 0xf4, 0xb5, 0x9a, 0x3f, 0x90, 0x7a, 0x40, 0xea, 0x0a, 0xb3, 0xb7, 0xc0, 0x4a, 0x8b, 0x19,
	0x5a, 0x8b, 0x32, 0xf1, 0x53, 0x27, 0xd7, 0x21, 0xb9, 0x0e, 0x57, 0xca, 0x5d, 0x2b, 0xf8, 0xa1,
	0x95, 0xd6, 0x64, 0x2a, 0x47, 0x7e, 0x44, 0x9e, 0x0e, 0x92, 0xa2, 0xe6, 0xae, 0xb6, 0xc8, 0x8f,
	0x5b, 0x25, 0x40, 0xaf, 0x7c, 0xc3, 0xb4, 0x52, 0x0e, 0xf9, 0x49, 0x50, 0x5a, 0xc8, 0x8e, 0x60,
	0x13, 0x0b, 0xa1, 0x72, 0xfe, 0x1f, 0xf1, 0x01, 0xb0, 0x57, 0xb0, 0x47, 0x87, 0x64, 0x89, 0x56,
	0x65, 0x0a, 0x25, 0x1f, 0xd1, 0x7e, 0x76, 0x89, 0xfd, 0xda, 0x92, 0xec, 0x04, 0xb6, 0x16, 0xa8,
	0x25, 0x5a, 0x3e, 0xa6, 0xea, 0x16, 0xb1, 0x7f, 0x60, 0x90, 0x2a, 0xeb, 0xee, 0xa5, 0x70, 0xc8,
	0x4f, 0xc3, 0x34, 0x57, 0x84, 0x9f, 0xc5, 0x77, 0xa3, 0x51, 0xe9, 0xcc, 0xf0, 0xb3, 0x30, 0x8b,
	0x0e, 0xfb, 0x8e, 0xb9, 0x99, 0x8b, 0x1c, 0xf9, 0xff, 0xa1, 0x63, 0x40, 0xec, 0x14, 0x76, 0xca,
	0x7b, 0xa3, 0x31, 0xd1, 0x75, 0x91, 0xa2, 0xe5, 0x13, 0x52, 0x87, 0xc4, 0xdd, 0x12, 0xc5, 0xae,
	0xe0, 0xf8, 0xa9, 0xe5, 0xf1, 0xea, 0x6f, 0xe8, 0xea, 0x7f, 0x3d, 0xf1, 0xae, 0x1e, 0x70, 0x03,
	0xdb, 0x42, 0x4a, 0x8b, 0x55, 0xc5, 0xcf, 0xc7, 0xbd, 0xc9, 0xf0, 0x6a, 0xf4, 0xdb, 0x8c, 0x05,
	0xdb, 0xac, 0xf3, 0xb3, 0x1b, 0x80, 0xb9, 0x45, 0xe1, 0x50, 0x26, 0xc2, 0x71, 0xa4, 0xea, 0x28,
	0x0e, 0xd1, 0x8f, 0xbb, 0xe8, 0xc7, 0x5f, 0xba, 0xe8, 0xcf, 0x06, 0xad, 0x7b, 0xea, 0x7c, 0x69,
	0x5d, 0xca, 0xae, 0x34, 0xfb, 0x73, 0x69, 0xeb, 0x9e, 0xba, 0xe8, 0x33, 0xec, 0x3f, 0x4b, 0xbb,
	0x4f, 0xf8, 0x03, 0x36, 0xbc, 0x17, 0x12, 0xfe, 0x80, 0x0d, 0x3b, 0x87, 0xcd, 0xa5, 0xc8, 0x6b,
	0xe4, 0x6b, 0xd4, 0xfa, 0xe8, 0x45, 0xeb, 0xa9, 0x6e, 0x66, 0xc1, 0xf2, 0x7e, 0xed, 0x5d, 0x2f,
	0xfa, 0xd1, 0x83, 0xed, 0xf6, 0x7d, 0x7e, 0x75, 0x99, 0xb1, 0x85, 0x70, 0x0e, 0x65, 0xdb, 0xf3,
	0x91, 0xf0, 0xb9, 0xa8, 0x9c, 0x45, 0x74, 0x49, 0x37, 0xb6, 0x35, 0xb2, 0xec, 0x06, 0xb6, 0x6b,
	0x12, 0x41, 0x9f, 0xf6, 0xa6, 0x5c, 0xc3, 0xd7, 0xc3, 0x86, 0x3b, 0xec, 0x37, 0x6c, 0x71, 0xa1,
	0x8c, 0xe6, 0x1b, 0x61, 0xc3, 0x01, 0xf9, 0x2f, 0x54, 0x9a, 0xca, 0x89, 0x3c, 0x99, 0x1b, 0x89,
	0x7c, 0x33, 0x7c, 0xa1, 0x40, 0x7d, 0x30, 0x92, 0x32, 0x3c, 0x37, 0xb5, 0x7f, 0x32, 0xdf, 0x0a,
	0x19, 0x6e, 0x61, 0xba, 0x45, 0x0f, 0xbb, 0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0x19, 0x11, 0x2e,
	0x8b, 0xb3, 0x04, 0x00, 0x00,
}
