syntax = "proto3";

package nghinhut.comstar;
option java_multiple_files = true;
option java_outer_classname = "ComstarProto";
option java_package = "com.nghinhut.comstar";

//import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

service Comstar {
    //  rpc ListUsersStream (ListUsersRequest) returns (stream User) { option (google.api.http) = { get: "/users" }; }
    //  rpc GetUserById (GetUserByIdRequest) returns (User) { option (google.api.http) = { get: "/users" }; }

    //  rpc AddJob(Job) returns (google.protobuf.Empty) {}
    //  rpc ListJobsStream (google.protobuf.Empty) returns (stream Job) {}

    // for runner
    //  rpc StreamJobStream (stream Job) returns (stream Job) {}

    // Event RPCs
    rpc StreamEventsStream(stream Event) returns (stream Event) {}
    rpc Subscription(SubscriptionRequest) returns (stream Event) {}
    //  rpc Subscription(google.protobuf.Empty) returns (stream Event) {}
    rpc PublishAnEvent(Event) returns (google.protobuf.Empty) {}
}

message SubscriptionRequest {
    repeated Event.Type event_types = 1;
    google.protobuf.Duration since = 2;               // Ex: stream events since 30m ago (duration=1800s),
}


message Event {
    int64 id = 1;
    enum Type {
        LOG = 0;

        // Outgoing SMS
        SMS_CREATED = 10;                               // event source: rpc PublishAnEvent
        SMS_QUEUED = 20;
        SMS_SENDING = 21;
        SMS_SENT = 23;
        SMS_FAILED = 25;

        // Incoming SMS
        SMS_RECEIVED = 30;

        // for runner
        RUNNER_STATUS_CHANGES = 40;                     // event source: rpc EventsPubSub
    }
    Type type = 2;
    map<string, google.protobuf.Any> metadata = 3;    // metadata should have event source, target
    google.protobuf.Any data = 4;
    google.protobuf.Timestamp created_at = 5;
}

message Log {
    enum Level {
        DEBUG = 0;
        INFO = 1;
        WARN = 2;
        ERROR = 3;
        TRACE = 4;
    }
    Level level = 10;
    string message = 11;
}

message Sms {
    uint64 id = 1;
    uint32 runner_id = 2;
    string body = 3;
    string recipient_number = 4;
    enum Type {
        OUTGOING = 0;
        INCOMING = 1;
    }
    Type type = 5;
    //  enum Status {
    //    CREATED = 0;
    //    QUEUED = 2;
    //    RUNNING = 4;
    //    SUCCESS = 8;
    //    ERROR = 16;
    //  }
    //  Status status = 10;
    //  google.protobuf.Timestamp start_time = 11;
    //  google.protobuf.Timestamp end_time = 12;
    google.protobuf.Timestamp created_at = 13;
}

message SmsReceived {

}

//message User {
//  uint32 id = 1;
//  repeated Template templates = 10;
//  uint32 max_sms_concurrency = 11;
//}
//message Template {
//  uint32 id = 1;
//  string template = 2;
//}
//message Number {
//  uint32 id = 1;
//  User owner = 2;
//  string number = 3;
//}
//message Runner {
//  uint32 id = 1;
//  string tags = 2;
//  repeated Number numbers = 3;
//}
//message Client {
//  enum Corpus {
//    UNIVERSAL = 0;
//    RUNNER = 1;
//  }
//  Corpus corpus = 4;
//}


//message PaginationResponse {
//  uint32 current_page = 1;
//  repeated google.protobuf.Any data = 2;
//  string first_page_url = 3;
//  uint32 from = 4;
//  uint32 last_page = 5;
//  string last_page_url = 6;
//  string next_page_url = 7;
//  string path = 8;
//  uint32 per_page = 9;
//  string prev_page_url = 10;
//  uint32 to = 11;
//  uint32 total = 12;
//}

//message ListUsersRequest {
//
//}
//
//message ListUsersResponse {
//
//}
//
//message GetUserByIdRequest {
//  uint32 id = 1;
//}



// HealthCheck
message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
    }
    ServingStatus status = 1;
}

service Health {
    rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
    rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}
