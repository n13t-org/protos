// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1alpha3.proto

package nghinhut_idm_v1alpha3

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Protocol Buffers messages
type User struct {
	Enabled    bool                `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Attributes map[string]*any.Any `protobuf:"bytes,100,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// OpenId Standard Claims Members (https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims)
	Sub                  string               `protobuf:"bytes,10,opt,name=sub,proto3" json:"sub,omitempty"`
	Name                 string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	GivenName            string               `protobuf:"bytes,12,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName           string               `protobuf:"bytes,14,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	MiddleName           string               `protobuf:"bytes,15,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Nickname             string               `protobuf:"bytes,16,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PreferredUsername    string               `protobuf:"bytes,17,opt,name=preferred_username,json=preferredUsername,proto3" json:"preferred_username,omitempty"`
	Profile              string               `protobuf:"bytes,20,opt,name=profile,proto3" json:"profile,omitempty"`
	Picture              string               `protobuf:"bytes,21,opt,name=picture,proto3" json:"picture,omitempty"`
	Website              string               `protobuf:"bytes,22,opt,name=website,proto3" json:"website,omitempty"`
	Email                string               `protobuf:"bytes,30,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified        bool                 `protobuf:"varint,31,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Gender               string               `protobuf:"bytes,32,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthdate            string               `protobuf:"bytes,33,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Zoneinfo             string               `protobuf:"bytes,34,opt,name=zoneinfo,proto3" json:"zoneinfo,omitempty"`
	Locale               string               `protobuf:"bytes,35,opt,name=locale,proto3" json:"locale,omitempty"`
	PhoneNumber          string               `protobuf:"bytes,40,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneNumberVerified  bool                 `protobuf:"varint,41,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	Address              *User_Address        `protobuf:"bytes,42,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8af1751d8cf7, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *User) GetAttributes() map[string]*any.Any {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *User) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *User) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *User) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetPreferredUsername() string {
	if m != nil {
		return m.PreferredUsername
	}
	return ""
}

func (m *User) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *User) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *User) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *User) GetZoneinfo() string {
	if m != nil {
		return m.Zoneinfo
	}
	return ""
}

func (m *User) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *User) GetAddress() *User_Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type User_Address struct {
	Formatted            string   `protobuf:"bytes,1,opt,name=formatted,proto3" json:"formatted,omitempty"`
	StreetAddress        string   `protobuf:"bytes,2,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	Locality             string   `protobuf:"bytes,3,opt,name=locality,proto3" json:"locality,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	PostalCode           string   `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User_Address) Reset()         { *m = User_Address{} }
func (m *User_Address) String() string { return proto.CompactTextString(m) }
func (*User_Address) ProtoMessage()    {}
func (*User_Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8af1751d8cf7, []int{0, 1}
}

func (m *User_Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User_Address.Unmarshal(m, b)
}
func (m *User_Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User_Address.Marshal(b, m, deterministic)
}
func (m *User_Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User_Address.Merge(m, src)
}
func (m *User_Address) XXX_Size() int {
	return xxx_messageInfo_User_Address.Size(m)
}
func (m *User_Address) XXX_DiscardUnknown() {
	xxx_messageInfo_User_Address.DiscardUnknown(m)
}

var xxx_messageInfo_User_Address proto.InternalMessageInfo

func (m *User_Address) GetFormatted() string {
	if m != nil {
		return m.Formatted
	}
	return ""
}

func (m *User_Address) GetStreetAddress() string {
	if m != nil {
		return m.StreetAddress
	}
	return ""
}

func (m *User_Address) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *User_Address) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *User_Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *User_Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type ListUsersRequest struct {
	Search               string   `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8af1751d8cf7, []int{1}
}

func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type SearchRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	PageNumber           int32    `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ResultPerPage        int32    `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage,proto3" json:"result_per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8af1751d8cf7, []int{2}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *SearchRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "nghinhut.idm.v1alpha3.User")
	proto.RegisterMapType((map[string]*any.Any)(nil), "nghinhut.idm.v1alpha3.User.AttributesEntry")
	proto.RegisterType((*User_Address)(nil), "nghinhut.idm.v1alpha3.User.Address")
	proto.RegisterType((*ListUsersRequest)(nil), "nghinhut.idm.v1alpha3.ListUsersRequest")
	proto.RegisterType((*SearchRequest)(nil), "nghinhut.idm.v1alpha3.SearchRequest")
}

func init() { proto.RegisterFile("v1alpha3.proto", fileDescriptor_85cf8af1751d8cf7) }

var fileDescriptor_85cf8af1751d8cf7 = []byte{
	// 790 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4f, 0x6f, 0xdc, 0x44,
	0x14, 0xef, 0x26, 0xd9, 0x24, 0xfb, 0xb6, 0xf9, 0xd3, 0x21, 0x89, 0x06, 0x17, 0xc8, 0x76, 0x2b,
	0x60, 0x09, 0xc2, 0x85, 0xf4, 0x02, 0x48, 0x1c, 0xa2, 0xa5, 0x07, 0x04, 0x54, 0x95, 0x43, 0xb8,
	0x70, 0xb0, 0xc6, 0x3b, 0xcf, 0xde, 0x51, 0xec, 0xb1, 0x3b, 0x1e, 0x2f, 0x32, 0xdf, 0x0d, 0x89,
	0x2f, 0xc1, 0xf7, 0x41, 0xf3, 0xc6, 0xde, 0x46, 0x5b, 0x08, 0x87, 0xde, 0xe6, 0xf7, 0xe7, 0x3d,
	0xcf, 0xfb, 0x33, 0x86, 0xc3, 0xd5, 0x57, 0x22, 0xaf, 0x96, 0xe2, 0x79, 0x58, 0x99, 0xd2, 0x96,
	0xec, 0x54, 0x67, 0x4b, 0xa5, 0x97, 0x8d, 0x0d, 0x95, 0x2c, 0xc2, 0x5e, 0x0c, 0xde, 0xcf, 0xca,
	0x32, 0xcb, 0xf1, 0x19, 0x99, 0x92, 0x26, 0x7d, 0x26, 0x74, 0xeb, 0x23, 0x82, 0xc7, 0x9b, 0x12,
	0x16, 0x95, 0xed, 0xc5, 0xf3, 0x4d, 0xd1, 0xaa, 0x02, 0x6b, 0x2b, 0x8a, 0xca, 0x1b, 0xa6, 0x7f,
	0xef, 0xc3, 0xce, 0x4d, 0x8d, 0x86, 0x71, 0xd8, 0x43, 0x2d, 0x92, 0x1c, 0x25, 0x1f, 0x4d, 0x06,
	0xb3, 0xfd, 0xa8, 0x87, 0xec, 0x47, 0x00, 0x61, 0xad, 0x51, 0x49, 0x63, 0xb1, 0xe6, 0x72, 0xb2,
	0x3d, 0x1b, 0x5f, 0x7e, 0x1e, 0xfe, 0xeb, 0x3d, 0x43, 0x97, 0x2a, 0xbc, 0x5a, 0xbb, 0x5f, 0x68,
	0x6b, 0xda, 0xe8, 0x4e, 0x38, 0x3b, 0x86, 0xed, 0xba, 0x49, 0x38, 0x4c, 0x06, 0xb3, 0x51, 0xe4,
	0x8e, 0x8c, 0xc1, 0x8e, 0x16, 0x05, 0xf2, 0x31, 0x51, 0x74, 0x66, 0x1f, 0x02, 0x64, 0x6a, 0x85,
	0x3a, 0x26, 0xe5, 0x21, 0x29, 0x23, 0x62, 0x5e, 0x3a, 0xf9, 0x1c, 0xc6, 0xa9, 0x28, 0x54, 0xde,
	0x7a, 0xfd, 0x90, 0x74, 0xf0, 0x54, 0x6f, 0x28, 0x94, 0x94, 0x39, 0x7a, 0xc3, 0x91, 0x37, 0x78,
	0x8a, 0x0c, 0x01, 0xec, 0x6b, 0xb5, 0xb8, 0x25, 0xf5, 0x98, 0xd4, 0x35, 0x66, 0x5f, 0x00, 0xab,
	0x0c, 0xa6, 0x68, 0x0c, 0xca, 0xb8, 0xa9, 0xd1, 0x90, 0xeb, 0x11, 0xb9, 0x1e, 0xad, 0x95, 0x9b,
	0x4e, 0x70, 0x8d, 0xab, 0x4c, 0x99, 0xaa, 0x1c, 0xf9, 0x09, 0x79, 0x7a, 0x48, 0x8a, 0x5a, 0xd8,
	0xc6, 0x20, 0x3f, 0xed, 0x14, 0x0f, 0x9d, 0xf2, 0x3b, 0x26, 0xb5, 0xb2, 0xc8, 0xcf, 0xbc, 0xd2,
	0x41, 0x76, 0x02, 0x43, 0x2c, 0x84, 0xca, 0xf9, 0x47, 0xc4, 0x7b, 0xc0, 0x3e, 0x86, 0x43, 0x3a,
	0xc4, 0x2b, 0x34, 0x2a, 0x55, 0x28, 0xf9, 0x39, 0xcd, 0xe8, 0x80, 0xd8, 0x5f, 0x3b, 0x92, 0x9d,
	0xc1, 0x6e, 0x86, 0x5a, 0xa2, 0xe1, 0x13, 0x8a, 0xee, 0x10, 0xfb, 0x00, 0x46, 0x89, 0x32, 0x76,
	0x29, 0x85, 0x45, 0xfe, 0xc4, 0x77, 0x73, 0x4d, 0xb8, 0x5e, 0xfc, 0x51, 0x6a, 0x54, 0x3a, 0x2d,
	0xf9, 0xd4, 0xf7, 0xa2, 0xc7, 0x2e, 0x63, 0x5e, 0x2e, 0x44, 0x8e, 0xfc, 0xa9, 0xcf, 0xe8, 0x11,
	0x7b, 0x02, 0x0f, 0xab, 0x65, 0xa9, 0x31, 0xd6, 0x4d, 0x91, 0xa0, 0xe1, 0x33, 0x52, 0xc7, 0xc4,
	0xbd, 0x24, 0x8a, 0x5d, 0xc2, 0xe9, 0x5d, 0xcb, 0x9b, 0xab, 0x7f, 0x46, 0x57, 0x7f, 0xef, 0x8e,
	0x77, 0x5d, 0xc0, 0x77, 0xb0, 0x27, 0xa4, 0x34, 0x58, 0xd7, 0xfc, 0x62, 0x32, 0x98, 0x8d, 0x2f,
	0x9f, 0xde, 0xbb, 0x67, 0xde, 0x1a, 0xf5, 0x31, 0xec, 0x1b, 0x80, 0x85, 0x41, 0x61, 0x51, 0xc6,
	0xc2, 0x72, 0xa4, 0x0c, 0x41, 0xe8, 0x9f, 0x40, 0xd8, 0x3f, 0x81, 0xf0, 0x97, 0xfe, 0x09, 0x44,
	0xa3, 0xce, 0x7d, 0x65, 0x5d, 0x68, 0x53, 0xc9, 0x3e, 0x34, 0xfd, 0xff, 0xd0, 0xce, 0x7d, 0x65,
	0x83, 0x6b, 0x38, 0xda, 0xd8, 0x78, 0xb7, 0xe5, 0xb7, 0xd8, 0xf2, 0x81, 0xdf, 0xf2, 0x5b, 0x6c,
	0xd9, 0x05, 0x0c, 0x57, 0x22, 0x6f, 0x90, 0x6f, 0x51, 0xea, 0x93, 0xb7, 0x52, 0x5f, 0xe9, 0x36,
	0xf2, 0x96, 0x6f, 0xb7, 0xbe, 0x1e, 0x04, 0x7f, 0x0e, 0x60, 0xaf, 0xab, 0xcf, 0x8d, 0x2f, 0x2d,
	0x4d, 0x21, 0xac, 0x45, 0xd9, 0xe5, 0x7c, 0x43, 0xb8, 0xdd, 0xa8, 0xad, 0x41, 0xb4, 0x71, 0xdf,
	0xba, 0x2d, 0xb2, 0x1c, 0x78, 0xb6, 0x4f, 0x12, 0xc0, 0x3e, 0xcd, 0x4e, 0xd9, 0x96, 0x6f, 0xfb,
	0x29, 0xf7, 0xd8, 0x4d, 0xd9, 0x60, 0xa6, 0x4a, 0xcd, 0x77, 0xfc, 0x94, 0x3d, 0x72, 0xcf, 0xa8,
	0x2a, 0x6b, 0x2b, 0xf2, 0x78, 0x51, 0x4a, 0xe4, 0x43, 0xff, 0x8c, 0x3c, 0x35, 0x2f, 0x25, 0xed,
	0xf1, 0xa2, 0x6c, 0x5c, 0xc9, 0x7c, 0xd7, 0xef, 0x71, 0x07, 0xa7, 0x17, 0x70, 0xfc, 0x93, 0xaa,
	0xad, 0x9b, 0x53, 0x1d, 0xe1, 0xeb, 0x06, 0x6b, 0xeb, 0x3e, 0x53, 0xa3, 0x30, 0x8b, 0x65, 0x57,
	0x44, 0x87, 0xa6, 0x1a, 0x0e, 0xae, 0xe9, 0xd4, 0x1b, 0x4f, 0x60, 0xf8, 0xba, 0x41, 0xd3, 0x37,
	0xd0, 0x03, 0xba, 0x8d, 0xc8, 0xd6, 0x2b, 0xe7, 0xaa, 0x1c, 0x46, 0xe0, 0xa8, 0x6e, 0xe3, 0x3e,
	0x81, 0x23, 0x83, 0x75, 0x93, 0xdb, 0xb8, 0x42, 0x13, 0x3b, 0x81, 0x2a, 0x1d, 0x46, 0x07, 0x9e,
	0x7e, 0x85, 0xe6, 0x95, 0xc8, 0xf0, 0xf2, 0xaf, 0x2d, 0x60, 0x3f, 0x48, 0xd4, 0x56, 0xd9, 0xf6,
	0x67, 0xa1, 0x45, 0x86, 0x05, 0x6a, 0xcb, 0xe6, 0x00, 0x73, 0xda, 0x07, 0xfa, 0x1f, 0x3e, 0xbe,
	0x67, 0xf3, 0x82, 0xb3, 0xb7, 0xc6, 0xf7, 0xc2, 0xfd, 0x74, 0xa7, 0x0f, 0xd8, 0x6f, 0x70, 0xb4,
	0xae, 0xfb, 0xda, 0x1a, 0x14, 0x05, 0xfb, 0xf4, 0x3f, 0x32, 0x6d, 0xf6, 0x27, 0xb8, 0xef, 0x93,
	0xd3, 0x07, 0x5f, 0x0e, 0xdc, 0x0d, 0x6f, 0x68, 0xed, 0xde, 0xe5, 0x86, 0x73, 0x80, 0xef, 0x31,
	0xc7, 0x77, 0x4a, 0x92, 0xec, 0x12, 0xf3, 0xfc, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0xc4,
	0xe2, 0xdc, 0xbf, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IdentityManagementClient is the client API for IdentityManagement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdentityManagementClient interface {
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error)
	ListUsersStream(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (IdentityManagement_ListUsersStreamClient, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error)
}

type identityManagementClient struct {
	cc *grpc.ClientConn
}

func NewIdentityManagementClient(cc *grpc.ClientConn) IdentityManagementClient {
	return &identityManagementClient{cc}
}

func (c *identityManagementClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nghinhut.idm.v1alpha3.IdentityManagement/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityManagementClient) ListUsersStream(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (IdentityManagement_ListUsersStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_IdentityManagement_serviceDesc.Streams[0], "/nghinhut.idm.v1alpha3.IdentityManagement/ListUsersStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &identityManagementListUsersStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type IdentityManagement_ListUsersStreamClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type identityManagementListUsersStreamClient struct {
	grpc.ClientStream
}

func (x *identityManagementListUsersStreamClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *identityManagementClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nghinhut.idm.v1alpha3.IdentityManagement/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityManagementClient) DeleteUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nghinhut.idm.v1alpha3.IdentityManagement/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdentityManagementServer is the server API for IdentityManagement service.
type IdentityManagementServer interface {
	CreateUser(context.Context, *User) (*empty.Empty, error)
	ListUsersStream(*ListUsersRequest, IdentityManagement_ListUsersStreamServer) error
	UpdateUser(context.Context, *User) (*empty.Empty, error)
	DeleteUser(context.Context, *User) (*empty.Empty, error)
}

// UnimplementedIdentityManagementServer can be embedded to have forward compatible implementations.
type UnimplementedIdentityManagementServer struct {
}

func (*UnimplementedIdentityManagementServer) CreateUser(ctx context.Context, req *User) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedIdentityManagementServer) ListUsersStream(req *ListUsersRequest, srv IdentityManagement_ListUsersStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ListUsersStream not implemented")
}
func (*UnimplementedIdentityManagementServer) UpdateUser(ctx context.Context, req *User) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedIdentityManagementServer) DeleteUser(ctx context.Context, req *User) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}

func RegisterIdentityManagementServer(s *grpc.Server, srv IdentityManagementServer) {
	s.RegisterService(&_IdentityManagement_serviceDesc, srv)
}

func _IdentityManagement_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityManagementServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nghinhut.idm.v1alpha3.IdentityManagement/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityManagementServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _IdentityManagement_ListUsersStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListUsersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IdentityManagementServer).ListUsersStream(m, &identityManagementListUsersStreamServer{stream})
}

type IdentityManagement_ListUsersStreamServer interface {
	Send(*User) error
	grpc.ServerStream
}

type identityManagementListUsersStreamServer struct {
	grpc.ServerStream
}

func (x *identityManagementListUsersStreamServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func _IdentityManagement_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityManagementServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nghinhut.idm.v1alpha3.IdentityManagement/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityManagementServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _IdentityManagement_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityManagementServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nghinhut.idm.v1alpha3.IdentityManagement/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityManagementServer).DeleteUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _IdentityManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nghinhut.idm.v1alpha3.IdentityManagement",
	HandlerType: (*IdentityManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _IdentityManagement_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _IdentityManagement_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _IdentityManagement_DeleteUser_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListUsersStream",
			Handler:       _IdentityManagement_ListUsersStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "v1alpha3.proto",
}
